# Home Assistant configuration
# source: doig007/HomeAssistant-Config

# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:


homeassistant:
  external_url: https://home.doig.uk

http:
  server_port: 8123
  use_x_forwarded_for: true
  trusted_proxies:
    - 172.21.0.2
    - 172.21.0.3
    - 172.21.0.4
    - 172.21.0.5
    - 172.21.0.6
    - 172.21.0.7
    - 172.21.0.8

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

frontend:
  themes: !include_dir_merge_named themes

recorder:
  purge_keep_days: 5000
  include:
    entity_globs:
      - sensor.octopus_energy*
      - sensor.sw_*
    entities:
      - sensor.hampstead_weather
      - media_player.tv_2
      - climate.hallway
      - sensor.hallway_humidity
      - sensor.hallway_temperature
      - sensor.xiaomi_miio_device_humidity
      - sensor.xiaomi_miio_device_temperature
      - sensor.xiaomi_miio_device_pm2_5
      - sensor.electricity_current_rate
      - sensor.electricity_next_rate
      - sensor.last_3_days_electricity_rate
      - sensor.electricity_consumption_prev_hh
      - sensor.appliance_on_counter_sensor_sw_washing_machine_power
      - sensor.appliance_sensor_sensor_sw_washing_machine_power

lovelace:
  mode: yaml
  # Add yaml dashboards
  dashboards:
    lovelace-yaml:
      mode: yaml
      title: Floorplan
      icon: mdi:floor-plan
      show_in_sidebar: true
      filename: lovelace.yaml

  # References to front-end custom cards from HACS (n.b. does not work in storage mode)
  resources:
    - url: /hacsfiles/circle-sensor-card/circle-sensor-card.js
      type: module
    - url: /hacsfiles/lovelace-home-feed-card/lovelace-home-feed-card.js
      type: js
    - url: /hacsfiles/mini-media-player-bundle.js
      type: module
    - url: /hacsfiles/flex-table-card/flex-table-card.js
      type: module
    - url: /hacsfiles/button-card/button-card.js
      type: module
    - url: /hacsfiles/simple-thermostat/simple-thermostat.js
      type: module
    - url: /hacsfiles/min-graph-card/mini-graph-card-bundle.js
      type: module
    - url: /hacsfiles/lovelace-multiple-entity-row/multiple-entity-row.js
      type: module
    - url: /hacsfiles/apexcharts-card/apexcharts-card.js
      type: module
    - url: /hacsfiles/button-text-card/button-text-card.js
      type: module

system_health:

notify:

media_player:

# Use light group rather than groups.yaml to enable brightness control
light: !include lights.yaml

# Explicit declaration of yeelight since discovery is imperfect
yeelight:
  devices:
    192.168.4.84:
      name: Nurserylight
      model: ceiling3
      
# Xiaomi air purifier      
# fan:
#  - platform: xiaomi_miio
#    host: 192.168.4.120
#    token: !secret fan_token    
              
nest:
  client_id: !secret nest_client_id
  client_secret: !secret nest_client_secret
  project_id: !secret nest_project_id
  subscriber_id: projects/newnestapiforha/subscriptions/nestHA

# Custom component used for voice control of various HA entities.  Uses personal google service
google_assistant:
  project_id: "hale-trilogy-289723"
  service_account: !include HAgoogleassistant-a74a22e861d3.json
  report_state: true
  exposed_domains:
    - light
    - group
    - script
    - sensor
  entity_config:
    group.lights_livingroom:
      name: Prepare the drawing room

template:
    - sensor:
      - name: "Electricity current rate"
        unique_id: electricity_rate
        state: "{{ states('sensor.octopus_energy_electricity_21j0023364_1200037135231_current_rate')| float * 100}}"
        unit_of_measurement: "p/kWh"
        icon: mdi:currency-gbp
        state_class: measurement

      - name: "Electricity next rate"
        unique_id: electricity_next_rate
        state: "{{ states('sensor.octopus_energy_electricity_21j0023364_1200037135231_next_rate')| float * 100}}"
        unit_of_measurement: "p/kWh"
        icon: mdi:currency-gbp
        state_class: measurement 

      - name: "Electricity consumption prev HH"
        unique_id: electricity_HH_consumption
        state: >
          {% set entries = state_attr('sensor.octopus_energy_electricity_21j0023364_1200037135231_current_accumulative_consumption','charges') | count  %}
          {% set last = state_attr('sensor.octopus_energy_electricity_21j0023364_1200037135231_current_accumulative_consumption','charges')[entries-2] %}
          {{ last.consumption }}
        unit_of_measurement: "kWh"
        state_class: measurement
        attributes:
          start_period: >
            {% set entries = state_attr('sensor.octopus_energy_electricity_21j0023364_1200037135231_current_accumulative_consumption','charges')| count %}
            {% set last = state_attr('sensor.octopus_energy_electricity_21j0023364_1200037135231_current_accumulative_consumption','charges')[entries-2] %}
            {{ last.start }}
          end_period: >
            {% set entries = state_attr('sensor.octopus_energy_electricity_21j0023364_1200037135231_current_accumulative_consumption','charges') | count %}
            {% set last = state_attr('sensor.octopus_energy_electricity_21j0023364_1200037135231_current_accumulative_consumption','charges')[entries-2] %}
            {{ last.end }}
          avg_power: >
            {% set entries = state_attr('sensor.octopus_energy_electricity_21j0023364_1200037135231_current_accumulative_consumption','charges') | count %}
            {% set last = state_attr('sensor.octopus_energy_electricity_21j0023364_1200037135231_current_accumulative_consumption','charges')[entries-2] %}
            {{ last.consumption / 0.5 *1000 }}

#        - name: "WAN IP address"
#          unique_id: unifi_wanip
#          unit_of_measurement: ""
#          state: "{{ state_attr('sensor.unifi_gateway_wan', 'wan_ip') }}"  

# Declaration of various sensors
sensor:
    - platform: average
      name: "Last 3 days electricity rate"
      unique_id: last_3_days_electricity_rate
      entities:
        - sensor.electricity_current_rate
      # Last 3 days: ends today at 00:00, lasts 3 days. 
      end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
      duration:
         days: 3


    - platform: integration
      source: sensor.sw_washing_machine_power
      name: sw_washing_machine_consumption
      unit_time: min
 

#  - platform: command_line
#    name: CPU Temperature
#    command: "cat /sys/class/thermal/thermal_zone0/temp"
#    unit_of_measurement: "Â°C"
#    value_template: '{{ value | multiply(0.001) | round(1) }}'
#     hvac_action:
#        value_template: >
#          {% set mapper =
#            { 'idle':'0',
#              'heating':'100'} %}   
#          {% set state = states('sensor.hallway_thermostat_hvac_action') %}
#          {% set id = mapper[state] if state in mapper %}
#          {{ id }}
#

influxdb:
  host: 192.168.1.5
  api_version: 2
  port: 8086
  ssl: false
  bucket: HomeAssistant
  organization: !secret influxdb_org
  token: !secret influxdb_token
  include:
    domains:
      - sensor
